# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: '9a795040-68e3-4ded-96dd-86d6d3a40c5d'

  # Web app name
  webAppName: 'flask-app-devops'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentName: 'flask-app-devops'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

  # Python version: 3.7
  pythonVersion: 3.8

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      name : Linux-Pool
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    - script: |
        python -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip
        pip install setup
        pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: "Install requirements"

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        artifact: 'flask-app-artifact'
      
# - stage: Deploy
  # displayName: 'Deploy Web App'
  # dependsOn: Build
  # condition: succeeded()
  # jobs:
  # - deployment: DeploymentJob
  #   pool:
  #     name:  flask-app-agent-pool
  #   environment: $(environmentName)
  #   strategy:
  #     runOnce:
  #       deploy:
  #         steps:

  #         - task: UsePythonVersion@0
  #           inputs:
  #             versionSpec: '$(pythonVersion)'
  #           displayName: 'Use Python version'

  #         - task: AzureWebApp@1
  #           displayName: 'Deploy Azure Web App : flask-app-devops'
  #           inputs:
  #             azureSubscription: $(azureServiceConnectionId)
  #             appName: $(webAppName)
  #             package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              
  #             startUpCommand: 'gunicorn --bind=0.0.0.0 --workers=4 startup:app'
          # - task: WhiteSource@21
          #   inputs:
          #     cwd: '$(System.DefaultWorkingDirectory)'